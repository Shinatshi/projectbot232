import telebot
from config import TOKEN
from gpt4all import GPT4All
from career_core import get_ai_response, get_ai_detail

bot = telebot.TeleBot(TOKEN)
model = GPT4All(model_name="orca-mini-3b-gguf2-q4_0")

user_states = {}  


@bot.message_handler(commands=['start', 'help'])
def start(message):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø Career Bot.\n\n"
        "–ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –∏–ª–∏ –∫–∞–∫–∏–µ —É —Ç–µ–±—è –Ω–∞–≤—ã–∫–∏ ‚Äî –∏ —è –ø—Ä–µ–¥–ª–æ–∂—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏.\n"
        "üìù –ö–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ '–ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏' ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏\n"
        "‚Ä¢ '–≤—ã—Ö–æ–¥' ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥"
    )
    user_states[message.chat.id] = {"shown_ids": [], "last_suggested": None}


@bot.message_handler(func=lambda msg: True)
def handle_message(message):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    """
    user_id = message.chat.id
    text = message.text.strip().lower()


    if user_id not in user_states:
        user_states[user_id] = {"shown_ids": [], "last_suggested": None}

    state = user_states[user_id]

    if text in ("–≤—ã—Ö–æ–¥", "exit", "quit"):
        bot.send_message(user_id, "üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏! –ú–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.")
        user_states[user_id] = {"shown_ids": [], "last_suggested": None}
        return

    if text in ("–ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏", "—Ä–∞—Å—Å–∫–∞–∂–∏ –±–æ–ª—å—à–µ", "more"):
        if state["last_suggested"]:
            bot.send_chat_action(user_id, 'typing')
            detail = get_ai_detail(model, state["last_suggested"])
            bot.send_message(user_id, f"üìò {detail}")
        else:
            bot.send_message(user_id, "‚ùå –ü—Ä–æ—Ñ–µ—Å—Å–∏—è –ø–æ–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞–π –∑–∞–ø—Ä–æ—Å.")
        return

    
    bot.send_chat_action(user_id, 'typing')
    try:
        response, shown_ids, last_suggested = get_ai_response(model, text, state["shown_ids"])
        state["shown_ids"] = shown_ids
        state["last_suggested"] = last_suggested
        bot.send_message(user_id, f"ü§ñ {response}")

    
        if last_suggested:
            bot.send_message(user_id, "üí° –ù–∞–ø–∏—à–∏ ¬´–ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏¬ª, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ–± —ç—Ç–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏.")
    except Exception as e:
        bot.send_message(user_id, f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    print("üöÄ Career Bot –∑–∞–ø—É—â–µ–Ω –≤ Telegram...")
    bot.infinity_polling()
